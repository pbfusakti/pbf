<head>
<style>
.makebold {
	font-weight: bold;
}
</style>
<script>
dojo.addOnLoad(function(){
	//dijit.byId('field26').set('value','');
	//dijit.byId('field26').set('placeHolder','Select');
        dijit.byId("Add").setDisabled('disabled', true);


});

<?php if(isset($this->result) && count($this->result) != 0){?>
var rowid= <?php echo count($this->result)+1;?>;
<?php } else {  ?>
 var rowid=1;   
<?php } ?>


function AutoFillNextEditableDropDown(EditableDropDownId,JSONText){
	dijit.byId(EditableDropDownId).setValue("");
	var ddwidget = dijit.byId(EditableDropDownId);
	ddwidget.setAttribute('disabled', false);
        var options = {
					label:"name",
					identifier:"key",
					items:JSONText
				  };
        ddwidget.store = new dojo.data.ItemFileReadStore( { data: options } );
}

var batchArray  = new Array();
var component = 0
<?php if(isset($this->result) && count($this->result) != 0){?>
		<?php foreach($this->result as $result) {?>
batchArray.push("<?php echo $result["IdComponent"].'-'.$result["IdComponentItem"];?>");

<?php }} ?>
    
console.log(batchArray);

function checkSave(){
	
	var a = batchArray;
	//console.log(a);
	//if(a==""){
	//	alert("Blank Value cannot be saved, click on add");
	//	return false;
	//}
}

 function remarkValidation() {
	var flag = true;
	var component =  dijit.byId('field25').value;
	//var detailcomponent = dijit.byId('field26').value;
	
	
	
//	if(detailcomponent==''){                         
//              dijit.byId("field26").set( "state", "Error" );
//              flag = false; 
//	}
	if(component==''){                         
              dijit.byId("field25").set( "state", "Error" );
              flag = false; 
	}
        
	if(flag == true) {
		RemarkdetailsInsertOnce();	
	}			
	return flag;
}



function RemarkdetailsInsertOnce() {
    
     var studentID =  dijit.byId('field1').value;
     var course = $('#field23').val();
     var Component = dijit.byId("field25").value;
     var ComponentDV = dijit.byId("field25").displayedValue;
     if(rowid == 0){ rowid =1; }
     if(course != "" && studentID!= "" && Component!="")
      {
	var xhrArgs = {
                            url: "<?php echo $this->baseUrl();?>"+"/examination/remarkappeal/getdetailcomponentlist/studentID/"+studentID+"/component/"+Component+"/course/"+course,
                            handleAs:'json',
                            load:function(data){ 
                                    //AutoFillNextEditableDropDown("field26",data); 
                                    
                                   var TotalJosnData = data.length;
                                    if(TotalJosnData>0) { 
                                    $.each(data, function(i, item){
                                    //alert("Mine is " + i + "|" + item.name + "|" + item.key);
                                    
                                           if(item.value==null) { item.value = ''; }
                                           if(item.key==null) { item.key = ''; }
                                            
                                            var nameItem   = item.MainCompName+'-'+item.MainCompItemName;
                                            var nameItemID   = item.Component+'-'+item.ComponentItem;
                                            
                                            batchArray.push(nameItemID);//component plus detail
                                            var trow = document.getElementById('hor').insertRow(rowid);	
                                            var tcol1=trow.insertCell(0);
                                            var tcol2=trow.insertCell(1);
                                            var tcol3=trow.insertCell(2);

                                            tcol1.innerHTML="<input type='hidden' value='"+nameItemID+"' name=ComponentGrid[]>"+nameItem;
                                            tcol2.innerHTML="<input type='hidden' value='"+item.key+"' name=DetailComponentGrid[]>"+item.value;		
                                            tcol3.innerHTML='<a href="javascript:void(0);" onClick="deleteRow(this,\''+item.Component+'\',\''+item.ComponentItem+'\'); return false;"><img src="<?php echo $this->baseUrl();?>/images/delete.png"  border=0 width=16 height=16></a>';
                                            rowid++;
                                            makefieldsReadonly();
                                    
                                    });
                                    } else {  
                                    alert('Sorry, No MarksEntry found for the selected Component');
                                    }
                                    
                            }
               }
            dojo.xhrGet(xhrArgs);
    }
     
    
    
    
}

function makefieldsReadonly() {
    dijit.byId("field2").attr('readOnly','true');
    dijit.byId("field1").attr('readOnly','true');
    dijit.byId("field3").attr('readOnly','true');
    dijit.byId("field4").attr('readOnly','true');
    dijit.byId("field25").attr('readOnly','true');
}


function RemarkdetailsInsert() {
	var ComponentDV = dijit.byId("field25").displayedValue;
	var Component = dijit.byId("field25").value;
		
	var DetailComponentDV = dijit.byId("field26").displayedValue;
	var DetailComponent = dijit.byId("field26").value;
	if(rowid == 1){
		component = dijit.byId("field25").value;
		//console.log(component);
		
	}
	
	batchArray.push(Component+'_'+DetailComponent);//component plus detail
	//console.log(batchArray);
	if(arrHasDupes(batchArray))
	{
		batchArray= batchArray.unique();
		alert("Duplicate Detail Component");
	}
	else{
		if(rowid==0) {  rowid=1; }
		var trow = document.getElementById('hor').insertRow(rowid);	
		var tcol1=trow.insertCell(0);
		var tcol2=trow.insertCell(1);
		var tcol3=trow.insertCell(2);
			
		tcol1.innerHTML="<input type='hidden' value='"+Component+"' name=ComponentGrid[]>"+ComponentDV;
		tcol2.innerHTML="<input type='hidden' value='"+DetailComponent+"' name=DetailComponentGrid[]>"+DetailComponentDV;		
		tcol3.innerHTML='<a href="javascript:void(0);" onClick="deleteRow(this,\''+Component+'\',\''+DetailComponent+'\'); return false;"><img src="<?php echo $this->baseUrl();?>/images/delete.png"  border=0 width=16 height=16></a>';
		rowid++;		
	}
	
}


function makefieldsActive() {

    dijit.byId('field25').reset();
    dijit.byId('field25').set('value','');
    dijit.byId('field25').set('placeHolder','Select'); 
    dijit.byId("field25").attr('readOnly',false);
    dijit.byId("Add").setAttribute('disabled', false);
    
}


function deleteRow(r,Component,DetailComponent)
{      
	var dStat = confirm("Are you sure to delete the Component?");
        if(dStat == true){     
        rowid--;	
	var i=r.parentNode.parentNode.rowIndex;
	batchArray.splice(parseInt(i-1),1);
	
	var makeArr = Component+'_'+DetailComponent;
        batchArray.splice(batchArray.indexOf(makeArr), 1);
	
	document.getElementById('hor').deleteRow(i);
        console.log(batchArray);
	if(rowid == 1){
		component = 0;
                makefieldsActive();
	}
        }
	
}

function arrHasDupes( A ) {              // finds any duplicate array elements using the fewest possible comparison
		var i, j, n;
		n=A.length;   						// to ensure the fewest possible comparisons
		for (i=0; i<n; i++) {                // outer loop uses each item i at 0 through n
			for (j=i+1; j<n; j++) {          // inner loop only compares items j at i+1 to n
				if (A[i]==A[j])
					return true;
			}
		}
		return false;
	}

	Array.prototype.unique = function () {
	    var r = new Array();
	    o:for(var i = 0, n = this.length; i < n; i++) {
	        for(var x = 0, y = r.length; x < y; x++) {
	        	if(r[x]==this[i]) {
	                	continue o;
	              }
	        }
	        r[r.length] = this[i];
	    }
	    return r;
	}
</script>
</head>


<div id="target">
	<form action="" name="searchF" id="searchF" method="POST">
		<input type="hidden" name="savedata" id="savedata" value="searchdata">
		<fieldset>
			<legend>
				<?php echo $this->translate("Remarking Against Appeal - Add");?>
			</legend>

			<table class="table" width="100%">

				<tr>
					<td><?php echo $this->translate("Student ID");?>
						<span class="reqMark">*</span></td>
					<td><?php echo $this->lobjform->field1;?></td>

					<td><?php echo $this->translate('Semester');?> <span
						class="reqMark">*</span></td>
					<td><?php echo $this->lobjform->field2;?></td>

					<td><?php echo $this->translate('Course');?> <span class="reqMark">*</span>
					</td>
					<td><?php echo $this->lobjform->field3;?> <input type='hidden'
						name="field23" id="field23" value="<?php echo $this->courseID;?>">
					</td>

				</tr>

				<tr>
					<td><?php echo $this->translate('Program');?>
					
					<td><?php echo $this->lobjform->field4;?></td>

					<td><?php echo $this->translate('Component');?> <span
						class="reqMark">*</span></td>
					<td><?php echo $this->lobjform->field25;?></td>



					<!--<td><?php //echo $this->translate('Detail Component');?>
		    <span class="reqMark">*</span></td>
                    <td><?php //echo $this->lobjform->field26;?></td>  -->
				</tr>

				<?php if($this->appealStatus=='192') { ?>
				<tr>
					<td align="center" colspan="6"><?php echo $this->lobjform->Add;?> <?php echo $this->lobjform->Clear;?>

					</td>
				</tr>
				<?php } ?>


			</table>

		</fieldset>
		<br />


		<fieldset>
			<table class="table" width="100%" id="hor" cellpadding="5"
				cellspacing="1">
				<tr>
					<th><?php echo $this->translate('Component');?></th>
					<th><?php echo $this->translate("Detail Component");?></th>
					<?php if($this->appealStatus=='192') { ?>
					<th><?php echo $this->translate("Delete");?></th>
					<?php } ?>
				</tr>


				<?php if(isset($this->result) && count($this->result) != 0){?>
				<?php foreach($this->result as $result) {?>
				<tr>
					<td><input type='hidden'
						value='<?php echo $result["IdComponent"].'-'.$result["IdComponentItem"];?>'
						name=ComponentGrid[]> <?php echo $result["Component"].'-'.$result["ComponentItem"];?>
					</td>
					<td><input type='hidden'
						value='<?php echo $result["IdSubComponent"];?>'
						name=DetailComponentGrid[]> <?php echo $result["DetailComponent"];?>
					</td>

					<?php if($this->appealStatus=='192') { ?>
					<td><a href="javascript:void(0);"
						onClick="deleteRow(this,'<?php echo $result["IdComponent"];?>','<?php echo $result["IdComponentItem"];?>'); return false;"><img
							src="<?php echo $this->baseUrl();?>/images/delete.png" border=0
							width=16 height=16> </a>
					</td>
					<?php } ?>
				</tr>
				<?php }?>
				<?php }?>
				<tr>
					<td align="right" colspan="4"><?php if($this->appealStatus=='192') { ?>
						<?php echo $this->lobjform->Save;?> <?php } ?> <input
						type='button' class="NormalBtn" dojotype="dijit.form.Button"
						label="<?php echo $this->translate('Back') ?>" value='click'
						onclick="window.location.href='<?php echo $this->url(array('module' => 'examination', 'controller' => 'remarkappeal', 'action' => 'index'), 'default', true); ?>';" />
					</td>
				</tr>

			</table>

		</fieldset>

	</form>
</div>
